# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Asset {
  assetType: String!
  dateCreated: DateTime!
  dateModified: DateTime!
  id: ID!
  realEstate: RealEstate
  realEstateId: Int
  taxReturnId: Int
  vehicle: Vehicle
  vehicleId: Int
}

"""The type of asset"""
enum AssetTypeEnum {
  REAL_ESTATE
  VEHICLE
}

type Benefit {
  amount: Float!
  benefitType: String!
  createdAt: DateTime!
  description: String!
  id: Int!
  providerName: String!
  taxReturnId: Int
  updatedAt: DateTime!
}

input CreateAssetInput {
  assetType: AssetTypeEnum!
  realEstate: CreateRealEstateInput
  taxReturnId: Int
  taxYear: Int!
  vehicle: CreateVehicleInput
}

input CreateBenefitInput {
  amount: Float!
  benefitType: String!
  providerName: String!
  taxReturnId: Int
  taxYear: Int!
  taxpayerId: String
}

input CreateDebtInput {
  debtType: DebtType!
  housingLoan: CreateHousingLoanInput
  otherDebt: CreateOtherDebtInput
  taxReturnId: Int
  taxYear: Int!
  taxpayerId: String!
}

input CreateHousingLoanInput {
  annualPayments: Float!
  interestExpenses: Float!
  lenderId: String
  lenderName: String!
  loanDate: String!
  loanNumber: String!
  loanTermYears: Int
  principalRepayment: Float!
  propertyAddress: String!
  remainingBalance: Float!
  taxReturnId: Int
  taxYear: Int!
  taxpayerId: String!
}

input CreateIncomeSourceInput {
  amount: Float!
  incomeType: String!
  sourceIdNumber: String
  sourceName: String!
  taxReturnId: Int
  taxYear: Int!
}

input CreateOtherDebtInput {
  creditorName: String!
  debtIdentifier: String
  debtType: OtherDebtType!
  interestExpenses: Float!
  remainingBalance: Float!
  taxReturnId: Int
  taxYear: Int!
  taxpayerId: String!
}

input CreateRealEstateInput {
  address: String!
  assetId: Float
  propertyId: String!
  propertyValue: Float!
  purchaseYear: Int
  taxReturnId: Int
  taxYear: Int!
}

input CreateTaxReportInput {
  notes: String
  status: String = "draft"
  submissionDate: DateTime
  taxYear: Int!
  totalDeductions: Float
  totalIncome: Float
  totalOwed: Float
  totalRefund: Float
  totalTaxableIncome: Float
  totalTaxes: Float
}

input CreateTaxpayerInput {
  city: String!
  email: String
  firstName: String!
  fullAddress: String!
  id: String!
  lastName: String!
  phoneNumber: String
  postalCode: String!
  streetAddress: String!
  taxYear: Int!
}

input CreateVehicleInput {
  purchasePrice: Float!
  purchaseYear: Int
  registrationNumber: String!
  taxReturnId: Int
  taxYear: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Debt {
  createdAt: DateTime!
  creditorName: String!
  debtType: String!
  housingLoan: HousingLoan
  id: Int!
  otherDebt: OtherDebt
  taxReturnId: Int
  updatedAt: DateTime!
}

"""The type of debt"""
enum DebtType {
  HOUSING_LOAN
  OTHER_DEBT
}

"""housing loan"""
type HousingLoan {
  annualPayments: Float!
  dateCreated: DateTime!
  dateModified: DateTime!
  id: ID!
  interestExpenses: Float!
  lenderId: String
  lenderName: String!
  loanDate: DateTime!
  loanNumber: String!
  loanTermYears: Int
  principalRepayment: Float!
  propertyAddress: String!
  remainingBalance: Float!
  taxYear: Int!
  taxpayerId: String!
}

"""income source"""
type IncomeSource {
  amount: Float!
  dateCreated: DateTime!
  dateModified: DateTime!
  id: ID!
  incomeType: String!
  sourceIdNumber: String
  sourceName: String!
  taxReturnId: Int
  taxYear: Int!
  taxpayerId: String!
}

"""LoginResult"""
type LoginResult {
  data: User!
  token: Token!
}

type Mutation {
  associateIncomeSourcesWithTaxReturn(incomeSourceIds: [Int!]!, taxReturnId: Int!): [IncomeSource!]!
  createAsset(createAssetInput: CreateAssetInput!): Asset!
  createBenefit(createBenefitInput: CreateBenefitInput!): Benefit!
  createDebt(createDebtInput: CreateDebtInput!): Debt!
  createHousingLoan(input: CreateHousingLoanInput!): HousingLoan!
  createIncomeSource(input: CreateIncomeSourceInput!): IncomeSource!
  createOtherDebt(createOtherDebtInput: CreateOtherDebtInput!): OtherDebt!
  createRealEstate(createRealEstateInput: CreateRealEstateInput!): RealEstate!
  createTaxReport(createTaxReportInput: CreateTaxReportInput!): TaxReportType!
  createTaxpayer(input: CreateTaxpayerInput!): Taxpayer!
  createVehicle(input: CreateVehicleInput!): Vehicle!
  deleteHousingLoan(id: Int!): HousingLoan!
  deleteIncomeSource(id: Int!): IncomeSource!
  deleteTaxpayer(id: String!): Taxpayer!
  deleteVehicle(id: Int!): Vehicle!
  loginAdmin(email: String!, password: String!): LoginResult!
  removeAsset(id: Int!): Asset!
  removeBenefit(id: Int!): Benefit!
  removeDebt(id: Int!): Debt!
  removeOtherDebt(id: Int!): OtherDebt!
  removeRealEstate(id: String!): RealEstate!
  removeTaxReport(id: Int!): TaxReportType!
  resetPassword(input: ResetPasswordInput!): Boolean!
  sendResetPasswordEmail(email: String!): String!
  updateAsset(updateAssetInput: UpdateAssetInput!): Asset!
  updateBenefit(updateBenefitInput: UpdateBenefitInput!): Benefit!
  updateDebt(updateDebtInput: UpdateDebtInput!): Debt!
  updateHousingLoan(input: UpdateHousingLoanInput!): HousingLoan!
  updateIncomeSource(input: UpdateIncomeSourceInput!): IncomeSource!
  updateOtherDebt(id: Int!, updateOtherDebtInput: UpdateOtherDebtInput!): OtherDebt!
  updateRealEstate(updateRealEstateInput: UpdateRealEstateInput!): RealEstate!
  updateTaxReport(updateTaxReportInput: UpdateTaxReportInput!): TaxReportType!
  updateTaxpayer(input: UpdateTaxpayerInput!): Taxpayer!
  updateVehicle(input: UpdateVehicleInput!): Vehicle!
}

"""other debt"""
type OtherDebt {
  creditorName: String!
  dateCreated: DateTime!
  dateModified: DateTime!
  debtIdentifier: String
  debtType: String!
  id: ID!
  interestExpenses: Float!
  remainingBalance: Float!
  taxYear: Int!
  taxpayerId: String!
}

"""The type of other debt"""
enum OtherDebtType {
  CAR_LOAN
  CREDIT_CARD
  OTHER
  PERSONAL_LOAN
  STUDENT_LOAN
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean
  startCursor: String
}

type PaginatedAssetsType {
  data: [Asset!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type PaginatedBenefitsType {
  data: [Benefit!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type PaginatedDebtsType {
  data: [Debt!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type PaginatedIncomeSourcesType {
  data: [IncomeSource!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type PaginatedTaxReportsType {
  data: [TaxReportType!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

type PaginatedVehiclesType {
  data: [Vehicle!]!
  pageInfo: PageInfo!
  totalCount: Float!
}

input PaginationInput {
  after: String
  before: String
  limit: Float
}

type Query {
  asset(id: Int!): Asset!
  assets(paginationInput: PaginationInput, taxYear: Int!): PaginatedAssetsType!
  benefit(id: Int!): Benefit!
  benefits(paginationInput: PaginationInput, taxYear: Int!): PaginatedBenefitsType!
  debt(id: Int!): Debt!
  debts(paginationInput: PaginationInput, taxYear: Int!): PaginatedDebtsType!
  housingLoan(id: Int!): HousingLoan!
  housingLoans(skip: Int, take: Int, taxYear: Int): [HousingLoan!]!
  housingLoansByTaxpayer(taxYear: Int, taxpayerId: String!): [HousingLoan!]!
  incomeSource(id: Int!): IncomeSource!
  incomeSources(incomeType: String, paginationInput: PaginationInput, taxYear: Int): PaginatedIncomeSourcesType!
  incomeSourcesByTaxReturn(paginationInput: PaginationInput, taxReturnId: Int!): PaginatedIncomeSourcesType!
  incomeSourcesByTaxpayer(paginationInput: PaginationInput, taxYear: Int): PaginatedIncomeSourcesType!
  otherDebt(id: Int!): OtherDebt!
  otherDebts(taxYear: Int!, taxpayerId: String!): [OtherDebt!]!
  realEstate(id: String!): RealEstate!
  realEstates(taxYear: Int!, taxpayerId: String!): [RealEstate!]!
  sayHello: String!
  taxReport(id: Int!): TaxReportType!
  taxReportDetailed(id: Int!): TaxReportType!
  taxReports(paginationInput: PaginationInput): PaginatedTaxReportsType!
  taxpayer(id: String!): Taxpayer!
  taxpayers(skip: Float, take: Float, taxYear: Float): [Taxpayer!]!
  vehicle(id: Int!): Vehicle!
  vehicles(pagination: PaginationInput, taxYear: Int!): PaginatedVehiclesType!
  whoAmI: User!
}

type RealEstate {
  address: String!
  dateCreated: DateTime!
  dateModified: DateTime!
  id: ID!
  propertyValue: Float!
  purchaseYear: Int
  taxpayerId: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

"""RoleGuest"""
type RoleGuest {
  accountType: [String!]!
}

type TaxReportType {
  assets: [Asset!]
  benefits: [Benefit!]
  dateCreated: DateTime!
  dateModified: DateTime!
  debts: [Debt!]
  id: ID!
  incomeSources: [IncomeSource!]
  notes: String
  status: String!
  submissionDate: DateTime
  taxYear: Float!
  taxpayer: Taxpayer
  userId: Float
}

"""taxpayer"""
type Taxpayer {
  city: String!
  dateCreated: DateTime!
  dateModified: DateTime!
  email: String
  firstName: String!
  fullAddress: String!
  id: ID!
  lastName: String!
  phoneNumber: String
  postalCode: String!
  streetAddress: String!
  taxYear: Int!
}

"""Token"""
type Token {
  expiresIn: String!
  token: String!
}

input UpdateAssetInput {
  assetType: AssetTypeEnum
  id: Int!
  realEstate: UpdateRealEstateInput
  taxReturnId: Int
  taxYear: Int
  taxpayerId: String
  vehicle: UpdateVehicleInput
}

input UpdateBenefitInput {
  amount: Float
  benefitType: String
  id: Int!
  providerName: String
  taxReturnId: Int
  taxYear: Int
  taxpayerId: String
}

input UpdateDebtInput {
  debtType: DebtType
  housingLoan: UpdateHousingLoanInput
  id: Int!
  otherDebt: UpdateOtherDebtInput
  taxReturnId: Int
  taxYear: Int
  taxpayerId: String
}

input UpdateHousingLoanInput {
  annualPayments: Float
  id: Int!
  interestExpenses: Float
  lenderId: String
  lenderName: String
  loanDate: String
  loanNumber: String
  loanTermYears: Int
  principalRepayment: Float
  propertyAddress: String
  remainingBalance: Float
  taxYear: Int
}

input UpdateIncomeSourceInput {
  amount: Float
  id: Int!
  incomeType: String
  sourceIdNumber: String
  sourceName: String
  taxReturnId: Int
  taxYear: Int
  taxpayerId: String
}

input UpdateOtherDebtInput {
  creditorName: String
  debtIdentifier: String
  debtType: OtherDebtType
  id: Int!
  interestExpenses: Float
  remainingBalance: Float
  taxYear: Int
}

input UpdateRealEstateInput {
  address: String
  id: ID!
  propertyId: String
  propertyValue: Float
  purchaseYear: Float
  taxYear: Float
  taxpayerId: String
}

input UpdateTaxReportInput {
  id: Int!
  notes: String
  status: String
  submissionDate: DateTime
  taxYear: Int
  totalDeductions: Float
  totalIncome: Float
  totalOwed: Float
  totalRefund: Float
  totalTaxableIncome: Float
  totalTaxes: Float
}

input UpdateTaxpayerInput {
  city: String
  email: String
  firstName: String
  fullAddress: String
  id: String!
  lastName: String
  phoneNumber: String
  postalCode: String
  streetAddress: String
  taxYear: Int
}

input UpdateVehicleInput {
  id: Int!
  purchasePrice: Float
  purchaseYear: Int
  registrationNumber: String
  taxYear: Int
}

"""File upload scalar type"""
scalar Upload

"""user"""
type User {
  createdAt: DateTime!
  email: String
  firstName: String
  id: ID!
  isActive: Boolean!
  lastName: String
  phone: String
  profilePic: String
  taxpayerId: String
  updatedAt: DateTime!
}

"""vehicle"""
type Vehicle {
  dateCreated: DateTime!
  dateModified: DateTime!
  id: ID!
  purchasePrice: Float!
  purchaseYear: Int
  registrationNumber: String!
  taxpayerId: String!
}